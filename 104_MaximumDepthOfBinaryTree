# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        return self.maxHelper(root, 0)
        
    def maxHelper(self, root, depth):
        if root is None:
            return depth
        
        if root.left is None and root.right is None:
            return depth + 1
        
        lDepth = 0
        rDepth = 0
        if root.left is not None:
            lDepth = self.maxHelper(root.left, depth+1)
            
        if root.right is not None:
            rDepth = self.maxHelper(root.right, depth+1)
            
        return max(rDepth, lDepth)
